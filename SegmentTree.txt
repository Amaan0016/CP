<snippet>
	<content><![CDATA[
class SGTree{
    vector <ll> seg;
public :
    SGTree(ll n){
        seg.resize(4*n+1);
    }
    void build(ll ind , ll low , ll high , vector <ll> &a){
        if(low == high){
            seg[ind] = a[low];
            return;
        }

        ll mid = (low + high) / 2;

        build(2*ind+1,low,mid,a);
        build(2*ind+2,mid+1,high,a);
        seg[ind] = max(seg[2*ind+1] , seg[2*ind+2]);
    }

    ll query(ll ind , ll low , ll high , ll l , ll r){
        if(low >= l and high <= r){
            return seg[ind];
        }

        if(high < l or low > r){
            return INT_MIN; // max
        }

        ll mid = (low + high) / 2;

        ll left = query(2*ind+1,low,mid,l,r);
        ll right = query(2*ind+2,mid+1,high,l,r);
        
        return max( left , right);
    }

    void Update(ll ind ,ll low,ll high,ll i,ll val){
        if(low == high){
            seg[ind]=val;
            return;
        }

        ll mid = (low + high) / 2;

        if(i <= mid){
            Update(2*ind+1,low,mid,i,val);
        }else{
            Update(2*ind+2,mid+1,high,i,val);
        }
        seg[ind]=max(seg[2*ind+1],seg[2*ind+2]);  
    }
};
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>segment_tree</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
